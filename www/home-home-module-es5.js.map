{"version":3,"sources":["src/app/home/home.page.html","src/app/home/home.module.ts","src/app/home/home.page.scss","src/app/home/home.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qrFAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACuBf,QAAa,cAAc,GAA3B,MAAa,cAAb,CAA2B,EAA3B;AAAa,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAf1B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,qBAAA,CAHO,EAIP,2CAAA,CAAA,aAAA,CAJO,EAKP,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,CACpB;AACE,QAAA,IAAI,EAAE,EADR;AAEE,QAAA,SAAS,EAAE,uCAAA,CAAA,UAAA;AAFb,OADoB,CAAtB,CALO,CADD;AAaR,MAAA,YAAY,EAAE,CAAC,uCAAA,CAAA,UAAA,CAAD;AAbN,KAAT,CAe0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;ACvBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iLAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAa,QAAQ,GAArB,MAAa,QAAb,CAAqB;AAMpB,MAAA,WAAA,CAAoB,EAApB,EAA6C,GAA7C,EAA2D;AAAvC,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,GAAA,GAAA,GAAA;AAC3C,aAAK,IAAL,GAAY,KAAK,EAAL,CAAQ,KAAR,CAAc;AACxB,UAAA,GAAG,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,EAA0B,KAAK,GAAL,CAAS,QAAnC,CADmB;AAExB,UAAA,KAAK,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,EAA0B,KAAK,GAAL,CAAS,UAAnC;AAFiB,SAAd,CAAZ;AAKA,cAAM,KAAK,GAAG,KAAK,IAAL,CAAU,QAAV,CAAmB,KAAjC;AACA,QAAA,KAAK,CAAC,YAAN,CAAmB,SAAnB,CAA8B,KAAD,IAAkB;AAC7C,UAAA,OAAO,CAAC,GAAR,2BAA+B,KAA/B;AACD,SAFD;AAGD;;AAED,MAAA,WAAW,CAAC,KAAD,EAAM;AACf,QAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACD;;AApBmB,KAArB;;;YAMyB,2CAAA,CAAA,aAAA;;YAA0B,uDAAA,CAAA,WAAA;;;AANtC,IAAA,QAAQ,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALpB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,UADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,2EAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKoB,E,uEAMI,2CAAA,CAAA,aAAA,C,EAA0B,uDAAA,CAAA,WAAA,C,EAN9B,CAAA,EAAR,QAAQ,CAAR","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title color=\\\"primary\\\">\\r\\n      Cara Employee\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <div  style=\\\"display: flex; justify-content: center; align-items: center; height: 100%;\\\">\\r\\n        <img src=\\\"../../assets/imgs/CaraLogo.jpg\\\"/>                          \\r\\n      </div>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n<ion-row>\\r\\n  <ion-col>\\r\\n      <ion-card>\\r\\n          <ion-card-header>\\r\\n              <ion-card-title>\\r\\n                  Log in to Cara\\r\\n              </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n            <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"saveDetails(form.value)\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n                <ion-input type=\\\"email\\\" [formControl]=\\\"form.controls['email']\\\"></ion-input>\\r\\n              </ion-item>\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Password</ion-label>\\r\\n                <ion-input type=\\\"Password\\\" [formControl]=\\\"form.controls['pwd']\\\"></ion-input>\\r\\n              </ion-item> \\r\\n              <div margin-vertical text-right>\\r\\n                <ion-button fill=\\\"outline\\\" color=\\\"danger\\\" id=\\\"btn-cancel\\\">\\r\\n                    <ion-icon name=\\\"close\\\" slot=\\\"start\\\">\\r\\n                    </ion-icon>\\r\\n                    Clear\\r\\n                </ion-button>\\r\\n                <ion-button fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"start\\\" id=\\\"btn-ok\\\">\\r\\n                  <ion-icon name=\\\"add\\\">\\r\\n                  </ion-icon>\\r\\n                  Log in\\r\\n                </ion-button>\\r\\n              </div>              \\r\\n            </form>\\r\\n            <div *ngIf=\\\"form.controls['email'].dirty && !form.controls['email'].valid\\\">\\r\\n              <p style=\\\"color: red;\\\" *ngIf=\\\"form.controls['email'].errors.InvalidEmail\\\">Email Address is not valid.</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"form.controls['pwd'].dirty && !form.controls['pwd'].valid\\\">\\r\\n              <p  style=\\\"color: red;\\\" *ngIf=\\\"form.controls['pwd'].errors.InvalidPwd\\\">Password should have one uppercase, one lowercase and a number.</p>\\r\\n            </div>            \\r\\n          </ion-card-content>\\r\\n      </ion-card>    \\r\\n  </ion-col>\\r\\n</ion-row>        \\r\\n<!---     <div class=\\\"vertical-center\\\">\\r\\n<div class=\\\"center\\\">\\r\\n    <ion-img src=\\\"resources/CaraLogo.jpg\\\" class=\\\"ion-align-self-end\\\" href=\\\"#\\\" onclick=\\\"showMessage()\\\"/>\\r\\n</div>           \\r\\n</div>    -->  \\r\\n <!--<ion-alert-controller></ion-alert-controller>-->\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { HomePage } from './home.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: HomePage\r\n      }\r\n    ])\r\n  ],\r\n  declarations: [HomePage]\r\n})\r\nexport class HomePageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Validator } from '../../provider/validator-helper';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'home.page.html',\r\n  styleUrls: ['home.page.scss'],\r\n})\r\nexport class HomePage {\r\n\r\n  //constructor() {}\r\n\r\n form: FormGroup;\r\n\r\n constructor(private fb: FormBuilder, private val: Validator) {\r\n   this.form = this.fb.group({\r\n     pwd: ['', Validators.required, this.val.pwdValid],\r\n     email: ['', Validators.required, this.val.emailValid]\r\n   });\r\n\r\n   const email = this.form.controls.email;\r\n   email.valueChanges.subscribe((value: string) => {\r\n     console.log(`Entered name is ${value}`);\r\n   });\r\n }\r\n\r\n saveDetails(value) {\r\n   console.dir(value);\r\n }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"home-home-module-es5.js"}